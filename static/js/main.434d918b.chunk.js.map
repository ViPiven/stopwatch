{"version":3,"sources":["App.js","index.js"],"names":["subscribe","source","interval","working","App","useState","time","setTime","timerOn","wasClicked","useEffect","val","currentTime","unsubscribe","className","Math","floor","slice","onClick","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAKIA,E,6DADEC,EAASC,YAAS,KAEpBC,GAAU,EAwDCC,MAtDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAUMC,GAVN,MAUmB,GAyBnB,OAXAC,qBAAU,WACLV,EAAYC,EAAOD,WAAU,SAAAW,GAC1BJ,GAAQ,SAAAK,GAAW,OAAIA,EAAc,QAGpCJ,IACDR,EAAUa,cACVV,GAAU,KAEf,CAACK,IAGF,sBAAKM,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACI,uBAAMA,UAAU,cAAhB,WAAgC,IAAMC,KAAKC,MAAQV,EAAO,KAAS,KAAKW,OAAO,GAA/E,OACA,uBAAMH,UAAU,cAAhB,WAAgC,IAAMC,KAAKC,MAAOV,EAAO,GAAM,KAAKW,OAAO,GAA3E,OACA,sBAAMH,UAAU,cAAhB,UAAgC,IAAMC,KAAKC,MAAOV,EAAQ,KAAKW,OAAO,QAExE,sBAAKH,UAAU,UAAf,UACI,wBAAQI,QA1CG,WACbf,IACAH,EAAYC,EAAOD,WAAU,SAAAW,GACzBJ,GAAQ,SAAAK,GAAW,OAAIA,EAAc,QAEzCT,GAAU,IAqCqBW,UAAU,iBAAvC,mBACA,wBAAQI,QAAS,WAAOlB,EAAUa,cAAeV,GAAU,GAAQW,UAAU,gBAA7E,kBACA,wBAAQI,QAjCI,WACZT,IACAT,EAAUa,cACVV,GAAU,GAEdM,GAAa,EACHU,YAAW,WACjBV,GAAa,IACd,MAyB+BK,UAAU,gBAAxC,kBACA,wBAAQI,QAAS,kBAAMX,EAAQ,IAAIO,UAAU,iBAA7C,0BCpDZM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.434d918b.chunk.js","sourcesContent":["import './App.scss';\r\nimport {useEffect, useState} from \"react\";\r\nimport { interval } from 'rxjs';\r\n\r\nconst source = interval(1000);\r\nlet subscribe;\r\nlet working = false;\r\n\r\nfunction App() {\r\n  const [time, setTime] = useState(0)\r\n  const [timerOn, setTimerOn] = useState(false)\r\n    const timerStart = () => {\r\n      if(!working) {\r\n          subscribe = source.subscribe(val => {\r\n              setTime(currentTime => currentTime + 1);\r\n          })\r\n          working = true;\r\n      }\r\n    }\r\n\r\n    let wasClicked = false;\r\n    let timeout;\r\n    const handleClick = () => {\r\n        if (wasClicked) {\r\n            subscribe.unsubscribe();\r\n            working = false;\r\n        }\r\n        wasClicked = true;\r\n        timeout = setTimeout(() => {\r\n            wasClicked = false;\r\n        }, 300);\r\n\r\n    }\r\n\r\n  useEffect(() => {\r\n       subscribe = source.subscribe(val => {\r\n          setTime(currentTime => currentTime + 1);\r\n      });\r\n\r\n      if (!timerOn) {\r\n          subscribe.unsubscribe();\r\n          working = false;\r\n      }\r\n  }, [timerOn])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"time\">\r\n          <span className=\"time__value\">{(\"0\" + Math.floor(((time / 3600)) % 60)).slice(-2)}:</span>\r\n          <span className=\"time__value\">{(\"0\" + Math.floor((time / 60) % 60)).slice(-2)}:</span>\r\n          <span className=\"time__value\">{(\"0\" + Math.floor((time) % 60)).slice(-2)}</span>\r\n      </div>\r\n        <div className=\"buttons\">\r\n            <button onClick={timerStart} className=\"buttons__start\">Start</button>\r\n            <button onClick={() => {subscribe.unsubscribe(); working = false}} className=\"buttons__stop\">Stop</button>\r\n            <button onClick={handleClick} className=\"buttons__wait\">Wait</button>\r\n            <button onClick={() => setTime(0)} className=\"buttons__reset\">Reset</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}